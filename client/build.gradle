apply plugin: 'com.android.application'
apply plugin: 'com.jakewharton.hugo'
apply from: "${rootDir}/gradle/version.gradle"

android {
    compileSdkVersion 22
    buildToolsVersion "25.0.2"
    defaultConfig {
        applicationId "com.example.client"
        minSdkVersion 22
        targetSdkVersion 22
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }

    buildTypes {
    }

    sourceSets{
        main {
            jniLibs.srcDir('src/main/jniLibs')
        }
    }

    externalNativeBuild {
        ndkBuild {
            path 'src/main/jni/Android.mk'
        }
    }

    // Rename APK files
    applicationVariants.all { variant ->
        def output = variant.outputs.get(0)
        File apk = output.outputFile
        String newName = output.outputFile.name
//                .replace("-release", "")
//                .replace("-debug", "")
                .replace(".apk", "-${variant.mergedFlavor.versionName}-${project.ext.versionInfo.build}.apk")
                .replace("app-", "${variant.mergedFlavor.applicationId}-")
        output.outputFile = new File(apk.parentFile, newName)
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:multidex:1.0.0'
    compile 'com.android.support:appcompat-v7:22.1.1'
    testCompile 'junit:junit:4.12'
    compile 'com.jakewharton:butterknife:8.6.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.6.0'
}

//这里拷贝的是未签名的apk，如果有配置签名信息，则以下改为拷贝已签名的文件
task swigTask(type:Exec) {
    commandLine 'cmd', '/c', 'swig'
    args '-java', '-package', 'com.evideo.client.swig', '-outdir', "${projectDir}/src/main/java/com/evideo/client/swig", '-o', "${projectDir}/src/main/jni/example.c", "${projectDir}/src/main/jni/example.i"
}

task testBatTask(type:Exec,description:'Eecute CMD'){
    workingDir 'nboxSoFile'
    commandLine 'cmd',"/c","executeEnhanceSoFileTask"
}

project.afterEvaluate(){
//    disableDebugBuild()
}

def disableDebugBuild(){
    //project.tasks包含了所有的tasks，下面的findAll是寻找那些名字中带debug的Task。
    //返回值保存到targetTasks容器中
    def targetTasks = project.tasks.findAll{task ->
        task.name.contains("Debug")
    }
    //对满足条件的task，设置它为disable。如此这般，这个Task就不会被执行
    targetTasks.each{
        println"disable debug task  :${it.name}"
        it.setEnabled false
    }
}